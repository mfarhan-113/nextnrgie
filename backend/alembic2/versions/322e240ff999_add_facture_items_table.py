"""Add facture_items table

Revision ID: 322e240ff999
Revises: 276cd7874713
Create Date: 2025-09-21 15:16:36.185906

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '322e240ff999'
down_revision: Union[str, None] = '276cd7874713'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Get database connection
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    
    # Check if tables exist before dropping
    if 'contract_details' in inspector.get_table_names():
        op.drop_table('contract_details')
    
    if 'invoices_new' in inspector.get_table_names():
        op.drop_table('invoices_new')
    
    # Add new columns if they don't exist
    if 'contact_phone' not in [col['name'] for col in inspector.get_columns('contracts')]:
        op.add_column('contracts', sa.Column('contact_phone', sa.String(length=50), nullable=True))
    
    if 'contact_email' not in [col['name'] for col in inspector.get_columns('contracts')]:
        op.add_column('contracts', sa.Column('contact_email', sa.String(length=255), nullable=True))
    
    if 'contact_address' not in [col['name'] for col in inspector.get_columns('contracts')]:
        op.add_column('contracts', sa.Column('contact_address', sa.String(length=500), nullable=True))
    
    # Drop column if it exists
    if 'paid_amount' in [col['name'] for col in inspector.get_columns('invoices')]:
        op.drop_column('invoices', 'paid_amount')


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('invoices', sa.Column('paid_amount', sa.REAL(), server_default=sa.text('(0.0)'), nullable=False))
    op.drop_column('contracts', 'contact_address')
    op.drop_column('contracts', 'contact_email')
    op.drop_column('contracts', 'contact_phone')
    op.create_table('invoices_new',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('invoice_number', sa.VARCHAR(), nullable=False),
    sa.Column('contract_id', sa.INTEGER(), nullable=False),
    sa.Column('amount', sa.REAL(), nullable=False),
    sa.Column('paid_amount', sa.REAL(), server_default=sa.text('(0.0)'), nullable=False),
    sa.Column('due_date', sa.DATE(), nullable=False),
    sa.Column('status', sa.VARCHAR(), server_default=sa.text("'unpaid'"), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['contracts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contract_details',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('contract_id', sa.INTEGER(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=False),
    sa.Column('qty', sa.INTEGER(), nullable=False),
    sa.Column('unit_price', sa.REAL(), nullable=False),
    sa.Column('tva', sa.REAL(), nullable=False),
    sa.Column('total_ht', sa.REAL(), nullable=False),
    sa.ForeignKeyConstraint(['contract_id'], ['contracts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
